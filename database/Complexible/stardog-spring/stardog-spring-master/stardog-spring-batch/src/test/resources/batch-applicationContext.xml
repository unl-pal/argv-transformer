<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">


    
    <!--  
	//////////////////////   Basic Stardog-Spring configuration //////////////////////
	-->

    <bean name="embeddedProvider" class="com.stardog.ext.spring.EmbeddedProvider"></bean>

    <bean name="dataSource" class="com.stardog.ext.spring.DataSourceFactoryBean">
        <property name="to" value="testdb"/>
        <property name="provider" ref="embeddedProvider"/>
        <property name="username" value="admin"/>
        <property name="password" value="admin"/>
    </bean>

	<bean name="template" class="com.stardog.ext.spring.SnarlTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!--  
	//////////////////////   Basic Spring Batch configuration //////////////////////
	
		- Synchronous task executor for simple JUnit Runners, can be easily swapped for AsyncTaskExecutor
		- in memory batch management
		- StepScope beans (SnarlReader and SnarlWriter) are created and destroyed with each batch run
		
	
	-->
	
	<bean name="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager">
	</bean>

	  <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
	  </bean>


	<bean id="syncTaskExecutor" class="org.springframework.core.task.SyncTaskExecutor"/>

	<bean id="jobLauncher"
	      class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
	    <property name="jobRepository" ref="jobRepository" />
	    <property name="taskExecutor" ref="syncTaskExecutor"/>
	</bean>

	<bean class="org.springframework.batch.core.scope.StepScope" />
	
	<bean id="testRowMapper" class="com.stardog.ext.spring.batch.TestRowMapper"/>
	
	<bean id="testBatchCallback" class="com.stardog.ext.spring.batch.TestBatchCallback"/>
	
	<!--  
	//////////////////////   Batch job configuration for Stardog //////////////////////
	-->
	
	<bean id="snarlReader" class="com.stardog.ext.spring.batch.SnarlItemReader" scope="step">
		<property name="dataSource" ref="dataSource"/>
		<property name="query" value="SELECT ?a ?b WHERE { ?a &lt;urn:test:predicate> ?b }"/>
		<property name="rowMapper" ref="testRowMapper"/>
	</bean>
	
	<bean id="snarlWriter" class="com.stardog.ext.spring.batch.SnarlItemWriter" scope="step">
		<property name="dataSource" ref="dataSource"/>
		<property name="callback" ref="testBatchCallback"/>
	</bean>
	
	<batch:job id="simpleJob" >
		<batch:step id="simpleStep">
			<batch:tasklet task-executor="syncTaskExecutor" throttle-limit="5">
				<batch:chunk reader="snarlReader" writer="snarlWriter" commit-interval="5"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
</beans>
