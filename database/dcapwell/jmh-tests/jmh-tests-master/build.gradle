plugins {
  id 'me.champeau.gradle.jmh' version '0.2.0'
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.3'
}

repositories {
   jcenter() // repository from which JMH will be downloaded
}

apply plugin: 'me.champeau.gradle.jmh'
apply plugin: 'java'

def currentJvm = org.gradle.internal.jvm.Jvm.current()
def jvmVersion = currentJvm.javaVersion

sourceSets {
  if (jvmVersion.equals(org.gradle.api.JavaVersion.VERSION_1_6)) {
    main {
      java {
        srcDir 'src/main/java'
        exclude '**/NIO**'
      }
    }
    test {
      java {
        srcDir 'src/test/java'
        exclude '**/NIO**'
      }
    }
    jmh {
      java {
        srcDir 'src/jmh/java'
        exclude '**/NIO**'
      }
    }
  }
}

test {
  useTestNG()
}

dependencies {
  compile 'net.java.dev.jna:jna:4.1.0'
  compile 'com.google.guava:guava:18.0'
  compile 'com.github.jnr:jnr-ffi:1.0.5'

  compile 'org.openjdk.jmh:jmh-core:1.11.2'
  compile 'org.openjdk.jmh:jmh-generator-annprocess:1.11.2'

  testCompile 'org.testng:testng:6.8.8'
}

jmh {
  include = 'com.github.dcapwell.java.methodtypes.*'
  iterations = 10
  fork = 2
  benchmarkMode = 'thrpt'
  failOnError = true
}
