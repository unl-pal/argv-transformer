package adlatm;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Cuong Tran
 */
public component class UI {
	
	// Create port for bank connection and declaration of its required services.
	public port bankConnection {
		requires void withdraw(String accno, int amount) throws Exception;
		requires void deposit(String accno, int amount) throws Exception;
		requires int balance(String accno) throws Exception;
	}
	
	// Create port for card reader connection with its required services.
	public port cardReaderConnection {
		requires String readAccountNo();
	}
	
	// Create port with the provided services of UI component.
	public port out {
		provides void show();
	}
	
	/**
	 * Method that display the UI (console) and use the connection between components
	 */
	public void show () {
		
		// Read account number from a card reader by calling its provided service
		// Use the port 'cardReaderConnection' and the service 'readAccountNo'
		String accno = cardReaderConnection.readAccountNo();
		
		// begin loop asking for service
		// and dispatch the selected service to Bank
		BufferedReader in = new BufferedReader ( new InputStreamReader (System.in ) );
			while ( true ) {
				System.out.println ( "Account number: " + accno);
				System.out.println ( "Available services: " );
				System.out.println ( " (B) or (b) Balance" );
				System.out.println ( " (W) or (w) Withdraw" );
				System.out.println ( " (D) or (d) Deposit" );
				System.out.println ( " (C) or (c) Cancel" );
				System.out.print ( "Choice: " );
			try {
				String service = in.readLine();
				service = service.trim().toUpperCase();
				// Processing the service choice
				if ( service.equals( "B" ) ) {
				
					// call a service of Bank to check balance and then print the result
					// Call the component bank via the port 'bankConnection' and the specific service.					
					System.out.println ( "Balance: " + bankConnection.balance ( accno ) );
				}
				else if ( service.equals ( "D" ) ) {
					System.out.print ( "Amount: " );
					String s = in.readLine();
					int val = Integer.parseInt ( s );
					
					// call another service of Bank to perform deposit
					// Call the component bank via the port 'bankConnection' and the specific service.					
					bankConnection.deposit ( accno, val );
					System.out.println ( "Deposit is complete." );
				}
				else if ( service.equals( "W" ) ) {
					System.out.print ( "Amount: " );
					String s = in.readLine();
					int val = Integer.parseInt ( s );
					
					// call another service Bank to perform withdraw
					// Call the component bank via the port 'bankConnection' and the specific service.
					bankConnection.withdraw ( accno, val );
					System.out.println ( "Withdraw is complete." );
				}
				else if ( service.equals ( "C" ) )
					break;
				else {
					System.out.println ( "Unrecognised service." );
				}
			} catch (Exception ex) {
				// Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
				System.out.println(ex.getMessage());
			}
		}
		// end loop
	}
}
