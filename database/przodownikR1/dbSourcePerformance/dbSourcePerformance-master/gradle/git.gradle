task generateSelfGitProperties {
    doLast {
      try {
        def branch          = 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()
        def revision        = 'git rev-list --max-count 1 --timestamp HEAD'.execute().text.trim()
        def commitHash      = revision.split(' ').last()
        def timestamp       = revision ? new java.util.Date(java.util.concurrent.TimeUnit.SECONDS.toMillis(revision.split(' ').first() as long)).format("yyyy-MM-dd'T'HH:mm:ssZ") : null
        File propertiesFile = new File('git.properties')
        if(timestamp) {
          if(!propertiesFile.exists()) {
            propertiesFile.createNewFile()
          }
          propertiesFile.text = """
      git.branch=${branch}
      git.commit.id=${commitHash}
      git.commit.time=${timestamp}""".trim()
        } else {
          project.logger.error('Unable to generate Git properties file:  revision could not be retrieved from Git.')
        }
      } catch (e) {
        project.logger.error('Unable to generate Git properties file.', e)
      }
    }
  }