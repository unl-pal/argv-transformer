apply plugin: 'findbugs'
apply plugin: 'jdepend'
//apply plugin: 'license'
apply plugin: 'jacoco'
//apply plugin: 'checkstyle'
apply plugin: "pmd"

/*tasks.withType(Checkstyle).each {task -> configure(task) {
    group = "checkstyle"
}}
*/
tasks.withType(FindBugs).each {task -> configure(task) {
    group = "FindBugs"
}}

tasks.withType(Pmd).each {task -> configure(task) {
    group = "pmd"
}}





jacoco {
    group = "jacoco"
    toolVersion = '0.7.1.201405082137'
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    group = "jacoco"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}
apply plugin: 'net.saliman.cobertura'


cobertura {
    coverageFormats = ['xml', 'html']
    cobertura.coverageReportDir = file("coberturaReports")
}

pmd {
    ignoreFailures = true
    sourceSets = [sourceSets.main]
         
}


task pmd(type: Pmd) {
    ruleSets = ["java-basic", "java-braces", "java-strings", "java-design", "java-unusedcode", "java-codesize","java-optimizations"]
    source = fileTree('src/main/java')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

tasks.withType(Pmd) {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}



findbugs {
    toolVersion = '3.0.0'
    sourceSets = [sourceSets.main]
    ignoreFailures = true
    reportsDir = file("${project.buildDir}/reports/findbugs")
    effort = 'max'
    reportLevel = 'high'
}

findbugsMain {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}



findbugsTest {
 
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

jdepend {
    group = "jdepend"
    toolVersion = '2.9.1'
    sourceSets = [sourceSets.main]
    ignoreFailures = true
    reportsDir = file("$project.buildDir/reports/jdepend")
}


/*license {
    header = rootProject.file('config/HEADER')
    strictCheck = true
    ignoreFailures = true
    mapping {
        java   = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
    }
    ext.year = '2016'
}

licenseTest {
    source -= sourceSets.test.resources
}*/