buildscript {
    repositories {
        //mavenLocal()
        maven {
            //url "http://192.168.1.99:9090/nexus/content/groups/public/"
            url "http://repo.spring.io/libs-release"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}

apply plugin: 'spring-boot'
apply plugin: 'war'

mainClassName = "com.gaodashang.jmd.MainApplicationConfiguration"

war {
    baseName = 'jmd'
    version =  '1.0.0'
    manifest {
        attributes 'Main-Class': 'com.gaodashang.jmd.MainApplicationConfiguration'
    }
}

configurations {
    providedRuntime
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0.0'

repositories {
    //mavenLocal()
    //maven {url "http://maven.oschina.net/content/groups/public/"}
    //maven {
        //url "http://192.168.1.99:9090/nexus/content/groups/public/"
   // }
    jcenter()
    maven { url "http://repo.spring.io/libs-snapshot" }
    //mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-jta-atomikos")
    compile("javax.jms:jms:1.1")
    compile("mysql:mysql-connector-java")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
}

task "create-scala-dirs" << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.scala.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}